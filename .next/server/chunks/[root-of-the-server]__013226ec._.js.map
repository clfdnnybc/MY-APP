{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///Users/57block/my-app/src/lib/db.ts"],"sourcesContent":["// lib/db.ts\nexport { sql } from '@vercel/postgres';"],"names":[],"mappings":"AAAA,YAAY;;AACZ","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///Users/57block/my-app/src/app/api/auth/route.ts"],"sourcesContent":["import { sql } from '@/lib/db';\nimport bcrypt from 'bcryptjs';\nimport { NextRequest, NextResponse } from 'next/server';\n\nexport async function POST(req: NextRequest) {\n  const { username, password, mode } = await req.json();\n\n  const result = await sql`SELECT * FROM users WHERE username = ${username}`;\n  const user = result.rows[0];\n\n  if (mode === 'signup') {\n    if (user) {\n      return NextResponse.json({ message: 'User exists' }, { status: 409 });\n    }\n    const hashed = await bcrypt.hash(password, 12);\n    await sql`INSERT INTO users (username, password) VALUES (${username}, ${hashed})`;\n    return NextResponse.json({ message: 'Registered' });\n  }\n\n  if (!user || !(await bcrypt.compare(password, user.password))) {\n    return NextResponse.json({ message: 'Invalid credentials' }, { status: 401 });\n  }\n\n  return NextResponse.json({ message: 'Login success' });\n}"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,GAAgB;IACzC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,IAAI;IAEnD,MAAM,SAAS,MAAM,mLAAA,CAAA,MAAG,CAAC,qCAAqC,EAAE,SAAS,CAAC;IAC1E,MAAM,OAAO,OAAO,IAAI,CAAC,EAAE;IAE3B,IAAI,SAAS,UAAU;QACrB,IAAI,MAAM;YACR,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAc,GAAG;gBAAE,QAAQ;YAAI;QACrE;QACA,MAAM,SAAS,MAAM,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;QAC3C,MAAM,mLAAA,CAAA,MAAG,CAAC,+CAA+C,EAAE,SAAS,EAAE,EAAE,OAAO,CAAC,CAAC;QACjF,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAa;IACnD;IAEA,IAAI,CAAC,QAAQ,CAAE,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ,GAAI;QAC7D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAsB,GAAG;YAAE,QAAQ;QAAI;IAC7E;IAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;IAAgB;AACtD","debugId":null}}]
}