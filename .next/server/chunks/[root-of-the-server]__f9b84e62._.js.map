{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///Users/57block/my-app/src/lib/db.ts"],"sourcesContent":["// lib/db.ts\nexport { sql } from '@vercel/postgres';"],"names":[],"mappings":"AAAA,YAAY;;AACZ","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///Users/57block/my-app/src/app/api/account/username/route.ts"],"sourcesContent":["import { sql } from '@/lib/db';\nimport { NextRequest, NextResponse } from 'next/server';\n\nexport async function PUT(req: NextRequest) {\n  try {\n    const { username: newUsername, storedUsername } = await req.json();\n    if (!newUsername || !storedUsername) {\n      return NextResponse.json({ message: 'Missing required fields' }, { status: 400 });\n    }\n\n    const existing = await sql`SELECT * FROM users WHERE username = ${newUsername}`;\n    const found = existing.rows[0];\n    if (found && found.username !== storedUsername) {\n      return NextResponse.json({ message: 'Username already taken' }, { status: 409 });\n    }\n\n    await sql`UPDATE users SET username = ${newUsername} WHERE username = ${storedUsername}`;\n    return NextResponse.json({ message: 'Username updated successfully' });\n  } catch (error: unknown) {\n    const msg = error instanceof Error ? error.message : 'Unknown error';\n    return NextResponse.json({ message: `Username update failed: ${msg}` }, { status: 500 });\n  }\n}"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,eAAe,IAAI,GAAgB;IACxC,IAAI;QACF,MAAM,EAAE,UAAU,WAAW,EAAE,cAAc,EAAE,GAAG,MAAM,IAAI,IAAI;QAChE,IAAI,CAAC,eAAe,CAAC,gBAAgB;YACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAA0B,GAAG;gBAAE,QAAQ;YAAI;QACjF;QAEA,MAAM,WAAW,MAAM,mLAAA,CAAA,MAAG,CAAC,qCAAqC,EAAE,YAAY,CAAC;QAC/E,MAAM,QAAQ,SAAS,IAAI,CAAC,EAAE;QAC9B,IAAI,SAAS,MAAM,QAAQ,KAAK,gBAAgB;YAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAyB,GAAG;gBAAE,QAAQ;YAAI;QAChF;QAEA,MAAM,mLAAA,CAAA,MAAG,CAAC,4BAA4B,EAAE,YAAY,kBAAkB,EAAE,eAAe,CAAC;QACxF,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAgC;IACtE,EAAE,OAAO,OAAgB;QACvB,MAAM,MAAM,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QACrD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS,CAAC,wBAAwB,EAAE,KAAK;QAAC,GAAG;YAAE,QAAQ;QAAI;IACxF;AACF","debugId":null}}]
}