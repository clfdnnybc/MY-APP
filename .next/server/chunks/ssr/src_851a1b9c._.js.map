{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/57block/my-app/src/app/UsernameContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const UsernameProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call UsernameProvider() from the server but UsernameProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/UsernameContext.tsx <module evaluation>\",\n    \"UsernameProvider\",\n);\nexport const useUsername = registerClientReference(\n    function() { throw new Error(\"Attempted to call useUsername() from the server but useUsername is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/UsernameContext.tsx <module evaluation>\",\n    \"useUsername\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,6DACA;AAEG,MAAM,cAAc,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6DACA","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/57block/my-app/src/app/UsernameContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const UsernameProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call UsernameProvider() from the server but UsernameProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/UsernameContext.tsx\",\n    \"UsernameProvider\",\n);\nexport const useUsername = registerClientReference(\n    function() { throw new Error(\"Attempted to call useUsername() from the server but useUsername is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/UsernameContext.tsx\",\n    \"useUsername\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,yCACA;AAEG,MAAM,cAAc,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yCACA","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///Users/57block/my-app/src/i18n.ts"],"sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport en from \"./locales/en.json\";\nimport zh from \"./locales/zh.json\";\n\ni18n\n  .use(LanguageDetector) // 加上这一行\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: { translation: en },\n      zh: { translation: zh },\n    },\n    fallbackLng: \"en\", // 默认英文\n    interpolation: { escapeValue: false },\n    detection: {\n      // 优先级：localStorage > navigator > html lang\n      order: [\"localStorage\", \"navigator\", \"htmlTag\"],\n      caches: [\"localStorage\"], // 语言写入 localStorage\n    },\n  });\n\nexport default i18n;"],"names":[],"mappings":";;;AAAA;AACA;AAAA;AACA;AACA;AACA;;;;;;AAEA,iJAAA,CAAA,UAAI,CACD,GAAG,CAAC,uMAAA,CAAA,UAAgB,EAAE,QAAQ;CAC9B,GAAG,CAAC,kKAAA,CAAA,mBAAgB,EACpB,IAAI,CAAC;IACJ,WAAW;QACT,IAAI;YAAE,aAAa,4FAAA,CAAA,UAAE;QAAC;QACtB,IAAI;YAAE,aAAa,4FAAA,CAAA,UAAE;QAAC;IACxB;IACA,aAAa;IACb,eAAe;QAAE,aAAa;IAAM;IACpC,WAAW;QACT,2CAA2C;QAC3C,OAAO;YAAC;YAAgB;YAAa;SAAU;QAC/C,QAAQ;YAAC;SAAe;IAC1B;AACF;uCAEa,iJAAA,CAAA,UAAI","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/57block/my-app/src/app/layout.tsx"],"sourcesContent":["import { cookies } from \"next/headers\";\nimport { UsernameProvider } from \"./UsernameContext\";\nimport { ReactNode } from \"react\";\nimport './globals.css'; // 确保导入全局样式\nimport { ViewTransitions } from \"next-view-transitions\";\nimport \"../i18n\";\n\nexport default async function RootLayout({ children }: { children: ReactNode }) {\n  const cookieStore = await cookies();\n  const theme = cookieStore.get(\"theme\")?.value || \"light\";\n  return (\n    <ViewTransitions>\n    <html lang=\"en\" translate=\"no\">\n      <body className={`flex flex-col min-h-screen ${theme}`}>\n        {/* 使用一个不破坏布局的包装元素 */}\n        \n          <UsernameProvider>\n            {children}\n          </UsernameProvider>\n        \n      </body>\n    </html>\n    </ViewTransitions>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AACA;AAGA;AACA;;;;;;;AAEe,eAAe,WAAW,EAAE,QAAQ,EAA2B;IAC5E,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAChC,MAAM,QAAQ,YAAY,GAAG,CAAC,UAAU,SAAS;IACjD,qBACE,8OAAC,4JAAA,CAAA,kBAAe;kBAChB,cAAA,8OAAC;YAAK,MAAK;YAAK,WAAU;sBACxB,cAAA,8OAAC;gBAAK,WAAW,CAAC,2BAA2B,EAAE,OAAO;0BAGlD,cAAA,8OAAC,8HAAA,CAAA,mBAAgB;8BACd;;;;;;;;;;;;;;;;;;;;;AAOb","debugId":null}}]
}